name: Release Candidate

on:
  push:
    branches: [ "main" ]
jobs:
  build_and_release:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Create github.properties file
        run: |
          touch github.properties
          echo gpr.usr=${{ secrets.GPR_USER }} >> github.properties
          echo gpr.key=${{ secrets.GPR_API_KEY }} >> github.properties
          echo "cat github.properties"
          cat github.properties
      - name: Retrieve Version name
        run: |
          echo "::set-output name=VERSION_NAME::$(${{github.workspace}}/gradlew -q versionName)"
        id: app_version
      - name: Set Version name
        run: |
          echo "VERSION_NAME=${{steps.app_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV
      - name: Build with Gradle
        run: ./gradlew build
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v.${{env.VERSION_NAME}}
          release_name: Release  ${{env.VERSION_NAME}}
      - name: Get Name of Artifacts
        run: |
            echo "ARTIFACT_PATHNAME_DEBUG=$(ls app/build/outputs/apk/debug/*.apk | head -n 1)" >> $GITHUB_ENV
            echo "ARTIFACT_NAME_DEBUG=$(basename  `ls app/build/outputs/apk/debug/*.apk | head -n 1`)" >> $GITHUB_ENV
            echo "ARTIFACT_PATHNAME_RELEASE=$(ls app/build/outputs/apk/release/*.apk | head -n 1)" >> $GITHUB_ENV
            echo "ARTIFACT_NAME_RELEASE=$(basename  `ls app/build/outputs/apk/release/*.apk | head -n 1`)" >> $GITHUB_ENV
      - name: Upload debug APK files
        id: upload_debug_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{env.ARTIFACT_PATHNAME_DEBUG}}
          asset_name: ${{env.ARTIFACT_NAME_DEBUG}}
          asset_content_type: application/zip
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{env.ARTIFACT_PATHNAME_RELEASE}}
          asset_name: ${{env.ARTIFACT_NAME_RELEASE}}
          asset_content_type: application/zip
