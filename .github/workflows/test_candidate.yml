name: Test Candidate

on:
  push:
    branches: [ "test/**" ]
jobs:
  build_test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Create debug keystore
        run: |
          mkdir -p $HOME/.android
          echo "$ANDROID_SDK_ROOT" > $HOME/.android/repositories.cfg
          echo "${{ secrets.DEBUG_KEYSTORE }}" | base64 --decode > $HOME/.android/debug.keystore
      

      #      - name: Run unit tests
      #        run: ./gradlew test
      #      - name: Upload test report directory
      #        uses: actions/upload-artifact@v3
      #        with:
      #          name: TestResults
      #          path: build/reports/tests/testDebugUnitTest/
      #      - name: Run lint
      #        run: ./gradlew lint
      #      - name: Upload lint report
      #        uses: actions/upload-artifact@v3
      #        with:
      #          name: LintResult
      #          path: build/reports/lint-results*.html
      - name: Get branch name
        id: extract_branch
        run: |
          echo "branch=$(echo ${GITHUB_REF##*/})" >>$GITHUB_OUTPUT
      - name: Build with Gradle
        run: ./gradlew -PverName=${{steps.extract_branch.outputs.branch}} clean build
      - name: Set App name
        run: |
          echo "APP_NAME=$(basename  `ls app/build/outputs/apk/debug/*.apk | head -n 1`)" >> $GITHUB_ENV
        id:
          app_name
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.APP_NAME}}
          path: app/build/outputs/apk/debug/*.apk
  build_and_release:

      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
        - name: set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: gradle

        - name: Create debug keystore
          run: |
            mkdir -p $HOME/.android
            echo "$ANDROID_SDK_ROOT" > $HOME/.android/repositories.cfg
            echo "${{ secrets.DEBUG_KEYSTORE }}" | base64 --decode > $HOME/.android/debug.keystore

        #      - name: Run unit tests
        #        run: ./gradlew test
        #      - name: Upload test report directory
        #        uses: actions/upload-artifact@v3
        #        with:
        #          name: TestResults
        #          path: build/reports/tests/testDebugUnitTest/
        #      - name: Run lint
        #        run: ./gradlew lint
        #      - name: Upload lint report
        #        uses: actions/upload-artifact@v3
        #        with:
        #          name: LintResult
        #          path: build/reports/lint-results*.html

        - name: Set Version Name
          run: echo "VERSION_NAME=$(./gradlew -q versionName)" >> $GITHUB_ENV

        - name: Build with Gradle
          run: ./gradlew clean build
        - name: Create or Update Release
          id: create_or_update_release
          run: |
            gh release edit "v.${{ env.VERSION_NAME }}.2" --title "Release test ${{ env.VERSION_NAME }}"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: Upload Artifacts
          id: upload_artifacts
          run: |
            release_tag="v.${{ env.VERSION_NAME }}"
            debug_apk=$(find app/build/outputs/apk/debug -name "*.apk")
            release_apk=$(find app/build/outputs/apk/release -name "*.apk")
            gh release upload $release_tag $debug_apk $release_apk
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
